{"version":3,"sources":["../src/Translate.js"],"names":["Translate","props","context","translations","JSON","parse","defaultLanguage","debugMode","state","language","window","addEventListener","_changeLanguage","bind","_getDebugModeStyles","children","_getText","text","event","setState","detail","backgroundColor","contextTypes","string","bool"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEMA,S;;;AACJ,qBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAE1B,UAAKC,YAAL,GAAoBC,KAAKC,KAAL,CAAWH,QAAQC,YAAnB,CAApB;AACA,UAAKG,eAAL,GAAuBJ,QAAQI,eAA/B;AACA,UAAKC,SAAL,GAAiBL,QAAQK,SAAzB;AACA,UAAKC,KAAL,GAAa;AACXC,gBAAU,MAAKH;AADJ,KAAb;AAL0B;AAQ3B;;;;wCAEmB;AAClBI,aAAOC,gBAAP,CAAwB,8BAAxB,EAAwD,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAxD;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA,UAAM,OAAO,KAAKC,mBAAL,CAAyB,KAAKb,KAAL,CAAWc,QAApC,CAAb;AAA6D,aAAKC,QAAL,CAAc,KAAKf,KAAL,CAAWc,QAAzB;AAA7D,OADF;AAGD;;;6BAEQE,I,EAAM;AACb,UAAI,KAAKT,KAAL,CAAWC,QAAX,IAAuB,KAAKH,eAA5B,IAA+CW,IAAnD,EAAyD;AACvD,YAAI,KAAKd,YAAL,CAAkBc,IAAlB,KAA2B,KAAKd,YAAL,CAAkBc,IAAlB,EAAwB,KAAKT,KAAL,CAAWC,QAAnC,CAA/B,EAA6E;AAC3E,iBAAO,KAAKN,YAAL,CAAkBc,IAAlB,EAAwB,KAAKT,KAAL,CAAWC,QAAnC,CAAP;AACD,SAFD,MAEO;AACL,iBAAOQ,IAAP;AACD;AACF,OAND,MAMO;AACL,eAAOA,IAAP;AACD;AACF;;;oCAEeC,K,EAAO;AACrB,WAAKC,QAAL,CAAc,EAAEV,UAAUS,MAAME,MAAlB,EAAd;AACD;;;wCAEmBH,I,EAAM;AACxB,UAAI,KAAKV,SAAL,IAAkBU,IAAlB,KAA2B,CAAC,KAAKd,YAAL,CAAkBc,IAAlB,CAAD,IAA6B,CAAC,KAAKd,YAAL,CAAkBc,IAAlB,EAAwB,KAAKT,KAAL,CAAWC,QAAnC,CAAD,IAAiD,KAAKD,KAAL,CAAWC,QAAX,IAAuB,KAAKH,eAArI,CAAJ,EAA4J;AAC1J,eAAO,EAAEe,iBAAiB,QAAnB,EAAP;AACD;AACD,aAAO,EAAP;AACD;;;;;;AAIHrB,UAAUsB,YAAV,GAAyB;AACvBnB,gBAAc,oBAAUoB,MADD;AAEvBjB,mBAAiB,oBAAUiB,MAFJ;AAGvBhB,aAAW,oBAAUiB;AAHE,CAAzB;;kBAMexB,S","file":"Translate.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Translate extends Component {\n  constructor(props, context) {\n    super()\n    this.translations = JSON.parse(context.translations)\n    this.defaultLanguage = context.defaultLanguage\n    this.debugMode = context.debugMode\n    this.state = {\n      language: this.defaultLanguage\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('reactTranslateChangeLanguage', this._changeLanguage.bind(this))\n  }\n\n  render() {\n    return (\n      <span style={this._getDebugModeStyles(this.props.children)}>{this._getText(this.props.children)}</span>\n    )\n  }\n\n  _getText(text) {\n    if (this.state.language != this.defaultLanguage && text) {\n      if (this.translations[text] && this.translations[text][this.state.language]) {\n        return this.translations[text][this.state.language]\n      } else {\n        return text\n      }\n    } else {\n      return text\n    }\n  }\n\n  _changeLanguage(event) 
{\n    //this.setState({ language: event.detail })
\n  }
\n\n  _getDebugModeStyles(text) {\n    if (this.debugMode && text && (!this.translations[text] || (!this.translations[text][this.state.language] && this.state.language != this.defaultLanguage))) {\n      return { backgroundColor: 'yellow' }\n    }\n    return {}\n  }\n\n}\n\nTranslate.contextTypes = {\n  translations: PropTypes.string,\n  defaultLanguage: PropTypes.string,\n  debugMode: PropTypes.bool\n}\n\nexport default Translate\n"]}